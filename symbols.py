class Sym():
    LEFT_PAREN = '\u0029' # (
    RIGHT_PAREN = '\u0029' # )

    NOT_ANGLE = '\u00AC' # ¬
    NOT_TILDE = '\u02DC'
    NOT_EXCLAMATION = '\u0021'
    NOT = [NOT_ANGLE, NOT_TILDE, NOT_EXCLAMATION]

    AND_WEDGE = '\u2227' # ∧ 
    AND_AMP = '\u0026'
    AND_DOT = '\u00B7'
    AND = [AND_WEDGE, AND_AMP, AND_DOT]

    OR_WEDGE = '\u2228' # ∨
    OR_PLUS = '\u002B'
    OR = [OR_WEDGE, OR_PLUS]

    EQUALS = '\u003D' # =

    IMPLIES_ARROW = '\u2192' # →
    IMPLIES_SUPERSET = '\u2283' # ⊃
    IMPLIES_WIDE_ARROW = '\u21D2' # ⇒
    IMPLIES = [IMPLIES_ARROW, IMPLIES_SUPERSET, IMPLIES_WIDE_ARROW]

    XOR_WEDGE = '\u22BB' # ⊻
    XOR_CIRCLE = '\u2295' # ⊕
    XOR = [XOR_WEDGE, XOR_CIRCLE]

    UNIVERSAL = '\u2200' # ∀
    EXISTENTIAL = '\u2203' # ∃
    NOT_EXISTS = '\u2204' # ∄
    QUANTIFIERS = [UNIVERSAL, EXISTENTIAL, NOT_EXISTS]

    EQUIVALENCE_ARROW = '\u21D4' # ⇔
    EQUIVALENCE_TRIPLE_LINE = '\u2261' # ≡
    EQUIVALENCE = [EQUIVALENCE_ARROW, EQUIVALENCE_TRIPLE_LINE]

    NECESSITY_BOX = '\u20DE' # 
    POSSIBILITY_DIAMOND = '\u20DF' # 

    PROVES = '\u22A2' # ⊢